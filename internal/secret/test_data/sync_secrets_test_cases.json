{
  "test_cases": [
    {
      "name": "successful_sync_secrets",
      "description": "Successfully sync secrets to a provider",
      "input": {
        "environment_id": "550e8400-e29b-41d4-a716-446655440000",
        "provider": "github",
        "version_id": "abc12345"
      },
      "expected": {
        "success": true,
        "error": null,
        "sync_response": {
          "provider": "github",
          "status": "success",
          "message": "Successfully synced 2 secrets",
          "synced_count": 2,
          "failed_count": 0,
          "total_count": 2,
          "results": [
            {
              "name": "DATABASE_URL",
              "success": true,
              "error": null
            },
            {
              "name": "API_KEY",
              "success": true,
              "error": null
            }
          ],
          "errors": [],
          "warnings": [],
          "synced_at": "2024-01-01T12:00:00Z",
          "version_id": "abc12345"
        }
      },
      "mock_setup": {
        "secret_repo": [
          {
            "method": "GetSecretVersion",
            "return": {
              "secret_version": {
                "id": "abc12345",
                "environment_id": "550e8400-e29b-41d4-a716-446655440000",
                "commit_message": "Add database and API credentials",
                "created_at": "2024-01-01T12:00:00Z"
              },
              "error": null
            }
          },
          {
            "method": "GetSecretsForVersion",
            "return": {
              "secrets": [
                {
                  "id": "550e8400-e29b-41d4-a716-446655440001",
                  "name": "DATABASE_URL",
                  "value_encrypted": "postgresql://user:pass@localhost:5432/db"
                },
                {
                  "id": "550e8400-e29b-41d4-a716-446655440002",
                  "name": "API_KEY",
                  "value_encrypted": "sk-1234567890abcdef"
                }
              ],
              "error": null
            }
          }
        ],
        "provider_service": {
          "method": "GetProviderSyncer",
          "return": {
            "provider_syncer": "mock_provider_syncer",
            "error": null
          }
        }
      }
    },
    {
      "name": "provider_not_found_error",
      "description": "Fail when provider is not configured for the environment",
      "input": {
        "environment_id": "550e8400-e29b-41d4-a716-446655440000",
        "provider": "nonexistent",
        "version_id": "abc12345"
      },
      "expected": {
        "success": false,
        "error": "provider not found"
      },
      "mock_setup": {
        "provider_service": {
          "method": "GetProviderSyncer",
          "return": {
            "error": "provider not found"
          }
        }
      }
    },
    {
      "name": "version_not_found_error",
      "description": "Fail when specified version does not exist",
      "input": {
        "environment_id": "550e8400-e29b-41d4-a716-446655440000",
        "provider": "github",
        "version_id": "nonexistent"
      },
      "expected": {
        "success": false,
        "error": "the secret version you are trying to operate not exist"
      },
      "mock_setup": {
        "secret_repo": [
          {
            "method": "GetSecretVersion",
            "return": {
              "error": "sql: no rows in result set"
            }
          }
        ]
      }
    },
    {
      "name": "database_error_on_secrets_fetch",
      "description": "Fail when database error occurs during secrets fetch",
      "input": {
        "environment_id": "550e8400-e29b-41d4-a716-446655440000",
        "provider": "github",
        "version_id": "abc12345"
      },
      "expected": {
        "success": false,
        "error": "the secret you are trying to operate not exist"
      },
      "mock_setup": {
        "secret_repo": [
          {
            "method": "GetSecretVersion",
            "return": {
              "secret_version": {
                "id": "abc12345",
                "environment_id": "550e8400-e29b-41d4-a716-446655440000",
                "commit_message": "Add database and API credentials",
                "created_at": "2024-01-01T12:00:00Z"
              },
              "error": null
            }
          },
          {
            "method": "GetSecretsForVersion",
            "return": {
              "error": "database connection failed"
            }
          }
        ]
      }
    },
    {
      "name": "decryption_error",
      "description": "Fail when decryption of secret values fails",
      "input": {
        "environment_id": "550e8400-e29b-41d4-a716-446655440000",
        "provider": "github",
        "version_id": "abc12345"
      },
      "expected": {
        "success": false,
        "error": "failed to decrypt secret value"
      },
      "mock_setup": {
        "secret_repo": [
          {
            "method": "GetSecretVersion",
            "return": {
              "secret_version": {
                "id": "abc12345",
                "environment_id": "550e8400-e29b-41d4-a716-446655440000",
                "commit_message": "Add database and API credentials",
                "created_at": "2024-01-01T12:00:00Z"
              },
              "error": null
            }
          },
          {
            "method": "GetSecretsForVersion",
            "return": {
              "secrets": [
                {
                  "id": "550e8400-e29b-41d4-a716-446655440001",
                  "name": "DATABASE_URL",
                  "value_encrypted": "corrupted_encrypted_value"
                }
              ],
              "error": null
            }
          }
        ],
        "provider_service": {
          "method": "GetProviderSyncer",
          "return": {
            "provider_syncer": "mock_provider_syncer",
            "error": null
          }
        }
      }
    },
    {
      "name": "provider_sync_error",
      "description": "Fail when provider sync operation fails",
      "input": {
        "environment_id": "550e8400-e29b-41d4-a716-446655440000",
        "provider": "github",
        "version_id": "abc12345"
      },
      "expected": {
        "success": false,
        "error": "failed to sync secrets to provider"
      },
      "mock_setup": {
        "secret_repo": [
          {
            "method": "GetSecretVersion",
            "return": {
              "secret_version": {
                "id": "abc12345",
                "environment_id": "550e8400-e29b-41d4-a716-446655440000",
                "commit_message": "Add database and API credentials",
                "created_at": "2024-01-01T12:00:00Z"
              },
              "error": null
            }
          },
          {
            "method": "GetSecretsForVersion",
            "return": {
              "secrets": [
                {
                  "id": "550e8400-e29b-41d4-a716-446655440001",
                  "name": "DATABASE_URL",
                  "value_encrypted": "postgresql://user:pass@localhost:5432/db"
                }
              ],
              "error": null
            }
          }
        ],
        "provider_service": {
          "method": "GetProviderSyncer",
          "return": {
            "provider_syncer": "mock_provider_syncer",
            "error": null
          }
        }
      }
    },
    {
      "name": "invalid_environment_id_error",
      "description": "Fail when environment ID is invalid",
      "input": {
        "environment_id": "invalid-uuid",
        "provider": "github",
        "version_id": "abc12345"
      },
      "expected": {
        "success": false,
        "error": "invalid UUID length"
      },
      "mock_setup": {}
    },
    {
      "name": "empty_provider_error",
      "description": "Fail when provider is empty",
      "input": {
        "environment_id": "550e8400-e29b-41d4-a716-446655440000",
        "provider": "",
        "version_id": "abc12345"
      },
      "expected": {
        "success": false,
        "error": "provider is required"
      },
      "mock_setup": {}
    }
  ]
} 