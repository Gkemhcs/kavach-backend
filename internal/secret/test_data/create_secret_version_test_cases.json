{
  "test_cases": [
    {
      "name": "successful_create_secret_version",
      "description": "Successfully create a new secret version with multiple secrets",
      "input": {
        "environment_id": "550e8400-e29b-41d4-a716-446655440000",
        "secrets": [
          {
            "name": "DATABASE_URL",
            "value": "postgresql://user:pass@localhost:5432/db"
          },
          {
            "name": "API_KEY",
            "value": "sk-1234567890abcdef"
          }
        ],
        "commit_message": "Add database and API credentials"
      },
      "expected": {
        "success": true,
        "error": null,
        "secret_version": {
          "id": "abc12345",
          "environment_id": "550e8400-e29b-41d4-a716-446655440000",
          "commit_message": "Add database and API credentials",
          "secret_count": 2
        }
      },
      "mock_setup": {
        "secret_repo": [
          {
            "method": "CreateSecretVersion",
            "return": {
              "secret_version": {
                "id": "abc12345",
                "environment_id": "550e8400-e29b-41d4-a716-446655440000",
                "commit_message": "Add database and API credentials",
                "created_at": "2024-01-01T00:00:00Z"
              },
              "error": null
            }
          },
          {
            "method": "InsertSecret",
            "return": {
              "error": null
            }
          },
          {
            "method": "InsertSecret",
            "return": {
              "error": null
            }
          }
        ]
      }
    },
    {
      "name": "empty_secrets_list_error",
      "description": "Fail to create secret version when secrets list is empty",
      "input": {
        "environment_id": "550e8400-e29b-41d4-a716-446655440000",
        "secrets": [],
        "commit_message": "Empty secrets"
      },
      "expected": {
        "success": false,
        "error": "at least one secret is required"
      },
      "mock_setup": {}
    },
    {
      "name": "invalid_environment_id_error",
      "description": "Fail to create secret version with invalid environment ID",
      "input": {
        "environment_id": "invalid-uuid",
        "secrets": [
          {
            "name": "TEST_SECRET",
            "value": "test_value"
          }
        ],
        "commit_message": "Test commit"
      },
      "expected": {
        "success": false,
        "error": "invalid UUID length"
      },
      "mock_setup": {}
    },
    {
      "name": "database_error_on_version_creation",
      "description": "Fail when database error occurs during version creation",
      "input": {
        "environment_id": "550e8400-e29b-41d4-a716-446655440000",
        "secrets": [
          {
            "name": "TEST_SECRET",
            "value": "test_value"
          }
        ],
        "commit_message": "Test commit"
      },
      "expected": {
        "success": false,
        "error": "failed to create secret version"
      },
      "mock_setup": {
        "secret_repo": [
          {
            "method": "CreateSecretVersion",
            "return": {
              "error": "database connection failed"
            }
          }
        ]
      }
    },
    {
      "name": "database_error_on_secret_insertion",
      "description": "Fail when database error occurs during secret insertion",
      "input": {
        "environment_id": "550e8400-e29b-41d4-a716-446655440000",
        "secrets": [
          {
            "name": "TEST_SECRET",
            "value": "test_value"
          }
        ],
        "commit_message": "Test commit"
      },
      "expected": {
        "success": false,
        "error": "failed to insert secret TEST_SECRET"
      },
      "mock_setup": {
        "secret_repo": [
          {
            "method": "CreateSecretVersion",
            "return": {
              "secret_version": {
                "id": "abc12345",
                "environment_id": "550e8400-e29b-41d4-a716-446655440000",
                "commit_message": "Test commit",
                "created_at": "2024-01-01T00:00:00Z"
              },
              "error": null
            }
          },
          {
            "method": "InsertSecret",
            "return": {
              "error": "insert failed"
            }
          }
        ]
      }
    },
    {
      "name": "encryption_error",
      "description": "Fail when encryption service fails",
      "input": {
        "environment_id": "550e8400-e29b-41d4-a716-446655440000",
        "secrets": [
          {
            "name": "TEST_SECRET",
            "value": "test_value"
          }
        ],
        "commit_message": "Test commit"
      },
      "expected": {
        "success": false,
        "error": "encryption failed"
      },
      "mock_setup": {}
    },
    {
      "name": "missing_commit_message_error",
      "description": "Fail when commit message is empty",
      "input": {
        "environment_id": "550e8400-e29b-41d4-a716-446655440000",
        "secrets": [
          {
            "name": "TEST_SECRET",
            "value": "test_value"
          }
        ],
        "commit_message": ""
      },
      "expected": {
        "success": false,
        "error": "commit message is required"
      },
      "mock_setup": {}
    },
    {
      "name": "duplicate_secret_names_error",
      "description": "Fail when duplicate secret names are provided",
      "input": {
        "environment_id": "550e8400-e29b-41d4-a716-446655440000",
        "secrets": [
          {
            "name": "DATABASE_URL",
            "value": "postgresql://user:pass@localhost:5432/db"
          },
          {
            "name": "DATABASE_URL",
            "value": "postgresql://user2:pass2@localhost:5432/db2"
          }
        ],
        "commit_message": "Add database credentials"
      },
      "expected": {
        "success": false,
        "error": "duplicate secret names are not allowed"
      },
      "mock_setup": {}
    }
  ]
} 