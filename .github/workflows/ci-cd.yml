name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
    paths-ignore:
      - 'infra/**'
      - 'docs/**'
      - 'README.md'
      - '.github/workflows/infrastructure.yml'

  pull_request:
    branches:
      - main
      - develop
    paths-ignore:
      - 'infra/**'
      - 'docs/**'
      - 'README.md'
      - '.github/workflows/infrastructure.yml'

env:
  GOOGLE_CLOUD_PROJECT: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
  REGISTRY: asia-south1-docker.pkg.dev
  IMAGE_NAME: kavach-backend
  ARTIFACT_REPO_NAME: kavach-artifact-repo-dev
  REGION: asia-south1
  SERVICE: kavach-backend-dev

permissions:
  contents: read
  id-token: write

jobs:
  fmt-and-lint:
    name: 'Format Code'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          cache: true

      - name: Run go fmt
        run: |
          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "Code is not formatted. Please run 'go fmt ./...'"
            gofmt -s -l .
            exit 1
          fi
          echo "Code is properly formatted"

  build-and-push:
    name: 'Build and Push Image'
    needs: fmt-and-lint
    runs-on: ubuntu-latest
    environment: kavach-gcp-dev
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GOOGLE_CLOUD_PROJECT }}

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.REGISTRY }}

      - name: Generate Tag
        id: tag
        run: |
          # Generate a 7-character tag from commit SHA
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          echo "tag=$SHORT_SHA" >> $GITHUB_OUTPUT
          echo "Generated tag: $SHORT_SHA"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.GOOGLE_CLOUD_PROJECT }}/${{ env.ARTIFACT_REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
        

      - name: Build and Push Latest Tag
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.GOOGLE_CLOUD_PROJECT }}/${{ env.ARTIFACT_REPO_NAME }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: 'Deploy to Cloud Run'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: '${{ env.SERVICE }}'
          region: '${{ env.REGION }}'
          image: '${{ env.REGISTRY }}/${{ env.GOOGLE_CLOUD_PROJECT }}/${{ env.ARTIFACT_REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }}'

      - name: Build Summary
        run: |
          echo "## üê≥ Docker Image Built Successfully"
          echo ""
          echo "**Image:** ${{ env.REGISTRY }}/${{ env.GOOGLE_CLOUD_PROJECT }}/${{ env.ARTIFACT_REPO_NAME }}/${{ env.IMAGE_NAME }}"
          echo "**Tag:** ${{ steps.tag.outputs.tag }}"
          echo "**Commit:** ${{ github.sha }}"
          echo "**Branch:** ${{ github.ref_name }}"
          echo "**Region:** ${{ env.REGION }}"
          echo ""
          echo "### üîó Links:"
          echo "- [Artifact Registry](https://console.cloud.google.com/artifacts?project=${{ env.GOOGLE_CLOUD_PROJECT }})"
          echo "- [Cloud Run](https://console.cloud.google.com/run?project=${{ env.GOOGLE_CLOUD_PROJECT }})" 